{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setshowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebd426de.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n  return( \r\n    <button onClick={onClick} style={{backgroundColor: color}} className='btn'>{text}</button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'gray'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n   \r\n \r\n  return (\r\n    <header className='header'>\r\n    \r\n    <h1>{title}</h1>\r\n     <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {title: 'Task Tracker'}\r\n\r\nHeader.propTypes = {title: PropTypes.string.isRequired}\r\n\r\nexport default Header;\r\n","import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n       <h3>{task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3>\r\n       <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n  \r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n          <label htmlFor=\"\">Task</label>\r\n          <input type=\"text\" placeholder=\"Add Task\" value={day} onChange={(e) => setDay(e.target.value)} />\r\n      </div>\r\n      <div className=\"form-control\">\r\n          <label htmlFor=\"\">Day & Time</label>\r\n          <input type=\"text\" placeholder=\"Add Day & Time\"  value={text} onChange={(e) => setText(e.target.value)}/>\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n          <label htmlFor=\"\">Set Reminder</label>\r\n          <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n      </div>\r\n      <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\"/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\nimport {useState} from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setshowAddTask ] = useState(false)\n  const [tasks, setTasks] = useState(\n    [{\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'School Meeting',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 7th at 12:30am',\n        reminder: false,\n    },\n])\n\n//add task\nconst addTask = (task) => {\n const id = Math.floor(Math.random() * 10000) + 1\n const newTask = {id, ...task}\n setTasks([...tasks, newTask])\n}\n\n//delete task\nconst deleteTask = (id) =>{\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n}\n  return (\n    <div className=\"container\">\n    \n     <Header onAdd={() => setshowAddTask(!showAddTask)} showAdd={showAddTask}/>\n     {showAddTask && <AddTask onAdd={addTask}/>}\n     {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n     ) : (\n       'No Tasks To Show'\n     )}\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}